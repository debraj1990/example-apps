#!/usr/bin/groovy

pipeline {
  
  agent any

  tools {nodejs "node"}

  stages {
    
    stage('Checkout') {
      steps {
        git 'https://github.com/nagabhushanamn/example-apps'
      }
    }

    stage('Install dependencies') {
      steps {
        dir('node-app') {
        sh 'npm install'
        }
      }
    }

    stage('Test') {
      steps {
        dir('node-app') {
         sh 'npm test'
        }
      }
      post {
        always {
          step([$class: 'CoberturaPublisher', coberturaReportFile: 'node-app/output/coverage/jest/cobertura-coverage.xml'])
        }
      }
    }

    stage("Build") {
        steps { buildApp() }
		}

    stage("Deploy - Dev") {
        steps { deploy('dev') }
		}

	}

}

 

// steps
def buildApp() {
	dir ('node-app' ) {
		def appImage = docker.build("nagabhushanamn/myapp:${BUILD_NUMBER}")
	}
}
def deploy(environment) {

	def containerName = ''
	def port = ''

	if ("${environment}" == 'dev') {
		containerName = "app_dev"
		port = "8888"
	} 
	else {
		println "Environment not valid"
		System.exit(0)
	}

	sh "docker ps -f name=${containerName} -q | xargs --no-run-if-empty docker stop"
	sh "docker ps -a -f name=${containerName} -q | xargs -r docker rm"
	sh "docker run -d -p ${port}:3000 --name ${containerName} nagabhushanamn/myapp:${BUILD_NUMBER}"

}


